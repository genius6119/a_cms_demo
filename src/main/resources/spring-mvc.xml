<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd ">
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="cn.qimu.controller" />
    <!-- <mvc:annotation-driven  /> -->
    <!-- 自定义 ObjectMapper 映射类，用于设置去NULL值，以及前端传递多余属性后端以@RequestBody 接收的问题-->
	<mvc:annotation-driven>
	    <mvc:message-converters register-defaults="true">
	        <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
	            <property name="objectMapper">
	                <bean class="cn.qimu.utils.QMObjectMapper" />
	            </property>
	        </bean>
	    </mvc:message-converters>
	</mvc:annotation-driven>
	
    <!-- 对静态资源文件的访问， 将无法mapping到Controller的path交给default servlet handler处理 -->
	<mvc:default-servlet-handler/>
	
	<!--配置拦截器, 多个拦截器,顺序执行 -->  
	<mvc:interceptors>
	    <mvc:interceptor>
	        <!--&lt;!&ndash; 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller &ndash;&gt;  -->
	        <mvc:mapping path="/**" />
	        <!--<mvc:mapping path="/file/**" />-->
	        <!--<mvc:mapping path="/test/**" />-->
	        <mvc:exclude-mapping path="/authless/*"/>
	        <mvc:exclude-mapping path="/authless/user/*"/>
	        <mvc:exclude-mapping path="/error_404"/>
	        <mvc:exclude-mapping path="/error_500"/>
	        <mvc:exclude-mapping path="/tokenError"/>
	        <mvc:exclude-mapping path="/pay/alipay_callback"/>
	        <mvc:exclude-mapping path="/pay/wechat_callback"/>
	        <mvc:exclude-mapping path="/pay/web_alipay_callback"/>
	        <mvc:exclude-mapping path="/system/getSystemVariable"/>
	        <mvc:exclude-mapping path="/accessoryCategory/getCategoryList"/>
	        <mvc:exclude-mapping path="/accessoryProperty/getPropertyList"/>
	        <mvc:exclude-mapping path="/articleCategory/getArticleCategory"/>
	        <mvc:exclude-mapping path="/factoryCategory/getCategoryList"/>
	        <mvc:exclude-mapping path="/goodsPrprty/getPropertyList"/>
	        <mvc:exclude-mapping path="/goodsSource/getList"/>
	        <mvc:exclude-mapping path="/area/*"/>
	        <bean class="cn.qimu.interceptor.CommonInterceptor"></bean>
	    </mvc:interceptor>
	    <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
	</mvc:interceptors>
	
	<!-- 事务管理 ，配置在 application 中，只有 Service 中的 transaction 生效，Controller中不会生效；
		若配置在 spring-mvc.xml 中，那么 spring-mvc.xml 上下文，包括 Controller 中的 Transaction 也会生效 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	 <!-- 全局异常处理 -->  
	<bean id="exceptionHandler" class="cn.qimu.interceptor.DefaultExceptionHandler" />

    <!--避免IE执行AJAX时，返回JSON出现下载文件 -->  
    <bean id="mappingJacksonHttpMessageConverter"  
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">  
        <property name="supportedMediaTypes">  
            <list>  
                <value>text/html;charset=UTF-8</value>  
            </list>  
        </property>  
    </bean>  
    <!-- 启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->  
    <bean  
        class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">  
        <property name="messageConverters">  
            <list>  
                <ref bean="mappingJacksonHttpMessageConverter" /> <!-- JSON转换器 -->  
            </list>  
        </property>  
    </bean>  
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>  
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>   
    
</beans>  