<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.qimu.mybatis.dao.BrandShoeMapper" >
  <resultMap id="BaseResultMap" type="cn.qimu.mybatis.model.BrandShoe" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="brand_id" property="brandId" jdbcType="VARCHAR" />
    <result column="shoe_name" property="shoeName" jdbcType="VARCHAR" />
    <result column="shoe_picture" property="shoePicture" jdbcType="VARCHAR" />
    <result column="shoe_url" property="shoeUrl" jdbcType="VARCHAR" />
    <result column="is_delete" property="isDelete" jdbcType="BIT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, brand_id, shoe_name, shoe_picture, shoe_url, is_delete
  </sql>
  <select id="countByCondition" resultType="int"  >
    select
    count(0)
    from brand_shoe
    where
    id>0
    <if test="isDelete != null">
      AND is_delete=#{isDelete}
    </if>
    <if test="brandId != null">
      AND brand_id =#{brandId}
    </if>
    <if test="brandShoe !=null and brandShoe != ''" >
      AND shoe_name like CONCAT('%',#{brandShoe},'%')
    </if>
  </select>
  <select id="selectBrandShoePage" resultMap="BaseResultMap"  >
    select
    <include refid="Base_Column_List" />
    from brand_shoe
    where
    id>0
    <if test="isDelete != null">
      AND is_delete=#{isDelete}
    </if>
    <if test="brandId != null">
      AND brand_id =#{brandId}
    </if>
    <if test="brandShoe !=null and brandShoe != ''" >
      AND shoe_name like CONCAT('%',#{brandShoe},'%')
    </if>
    LIMIT  #{startRow} , #{pageSize}
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.qimu.mybatis.model.BrandShoeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from brand_shoe
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from brand_shoe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectBrandIdByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    brand_id
    from brand_shoe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectShoeNameByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    shoe_name
    from brand_shoe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectShoePictureByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    shoe_picture
    from brand_shoe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectShoeShopByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    shoe_url
    from brand_shoe
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from brand_shoe
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.qimu.mybatis.model.BrandShoeExample" >
    delete from brand_shoe
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.qimu.mybatis.model.BrandShoe" >
    insert into brand_shoe (id, brand_id, shoe_name, 
      shoe_picture, shoe_url, is_delete
      )
    values (#{id,jdbcType=INTEGER}, #{brandId,jdbcType=VARCHAR}, #{shoeName,jdbcType=VARCHAR}, 
      #{shoePicture,jdbcType=VARCHAR}, #{shoeUrl,jdbcType=VARCHAR}, #{isDelete,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.qimu.mybatis.model.BrandShoe" >
    insert into brand_shoe
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="shoeName != null" >
        shoe_name,
      </if>
      <if test="shoePicture != null" >
        shoe_picture,
      </if>
      <if test="shoeUrl != null" >
        shoe_url,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="shoeName != null" >
        #{shoeName,jdbcType=VARCHAR},
      </if>
      <if test="shoePicture != null" >
        #{shoePicture,jdbcType=VARCHAR},
      </if>
      <if test="shoeUrl != null" >
        #{shoeUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.qimu.mybatis.model.BrandShoeExample" resultType="java.lang.Integer" >
    select count(*) from brand_shoe
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update brand_shoe
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.brandId != null" >
        brand_id = #{record.brandId,jdbcType=VARCHAR},
      </if>
      <if test="record.shoeName != null" >
        shoe_name = #{record.shoeName,jdbcType=VARCHAR},
      </if>
      <if test="record.shoePicture != null" >
        shoe_picture = #{record.shoePicture,jdbcType=VARCHAR},
      </if>
      <if test="record.shoeUrl != null" >
        shoe_url = #{record.shoeUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update brand_shoe
    set id = #{record.id,jdbcType=INTEGER},
      brand_id = #{record.brandId,jdbcType=VARCHAR},
      shoe_name = #{record.shoeName,jdbcType=VARCHAR},
      shoe_picture = #{record.shoePicture,jdbcType=VARCHAR},
      shoe_url = #{record.shoeUrl,jdbcType=VARCHAR},
      is_delete = #{record.isDelete,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.qimu.mybatis.model.BrandShoe" >
    update brand_shoe
    <set >
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=VARCHAR},
      </if>
      <if test="shoeName != null" >
        shoe_name = #{shoeName,jdbcType=VARCHAR},
      </if>
      <if test="shoePicture != null" >
        shoe_picture = #{shoePicture,jdbcType=VARCHAR},
      </if>
      <if test="shoeUrl != null" >
        shoe_url = #{shoeUrl,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.qimu.mybatis.model.BrandShoe" >
    update brand_shoe
    set brand_id = #{brandId,jdbcType=VARCHAR},
      shoe_name = #{shoeName,jdbcType=VARCHAR},
      shoe_picture = #{shoePicture,jdbcType=VARCHAR},
      shoe_url = #{shoeUrl,jdbcType=VARCHAR},
      is_delete = #{isDelete,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>